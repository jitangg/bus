<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>loginn</title>
</head>
<body>
    <form>
        <h1>회원가입</h1>
        <div> email : <input type="email" id="signUpEmail" /></div>
        <div> password : <input type="password" id="signUpPassword" /></div>
        <button type="submit" id="signUpButton" >회원가입 하기</button>
        <button>로그인 하러 가기</button>
    </form>

    <form>
        <h1>로그인</h1>
        <div> email : <input type="email" id="signInEmail" /></div>
        <div> password : <input type="password" id="signInPassword" /></div>
        <button type="submit" id="signInButton" >로그인 하기</button>
        <button>회원가입 하러 가기</button>
    </form>
    <button id="googleLogin">구글 아이디로 로그인</button>

    <form>
        핸드폰 번호 : <input id="phoneNumber" />
        <button id="phoneNumberButton">핸드폰 번호 전송</button>
    </form>

    <form>
        확인 코드 : <input id="confirmCode"/>
        <button id="confirmCodeButton">확인 코드 전송</button>
    </form>

    <script type="module">
        // Import the functions you need from the SDKs you need
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.18.0/firebase-app.js";
        import { getAnalytics } from "https://www.gstatic.com/firebasejs/9.18.0/firebase-analytics.js";
        import { GoogleAuthProvider } from "https://www.gstatic.com/firebasejs/9.18.0/firebase-auth.js";
        // TODO: Add SDKs for Firebase products that you want to use
        // https://firebase.google.com/docs/web/setup#available-libraries
      
        // Your web app's Firebase configuration
        // For Firebase JS SDK v7.20.0 and later, measurementId is optional
        const firebaseConfig = {
          apiKey: "AIzaSyDm1__PQHtodY5_DLu0KJKCR_q28z9mB24",
          authDomain: "easyloginn-faab5.firebaseapp.com",
          projectId: "easyloginn-faab5",
          storageBucket: "easyloginn-faab5.appspot.com",
          messagingSenderId: "997045586251",
          appId: "1:997045586251:web:c65652cd7e87a698b300ce",
          measurementId: "G-X33L39D4E6"
        };
      
        // Initialize Firebase
        const app = initializeApp(firebaseConfig);
        const analytics = getAnalytics(app);

        const provider = new GoogleAuthProvider();


        import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, signInWithPhoneNumber, RecaptchaVerifier  } from "https://www.gstatic.com/firebasejs/9.18.0/firebase-auth.js";

        const auth = getAuth();
        auth.languageCode = 'ko';

        document.getElementById('signUpButton').addEventListener('click', (event) => {
            event.preventDefault()
            const signUpEmail = document.getElementById('signUpEmail').value
            const signUpPassword = document.getElementById('signUpPassword').value

            createUserWithEmailAndPassword(auth, signUpEmail, signUpPassword)
            .then((userCredential) => {
                console.log(userCredential)
                // Signed in
                const user = userCredential.user;
                // ...
            })
            .catch((error) => {
                console.log(error)
                const errorCode = error.code;
                const errorMessage = error.message;
                // ..
            });

        })

        document.getElementById('signInButton').addEventListener('click',(event) => {
            event.preventDefault()
            const signInEmail = document.getElementById('signInEmail').value
            const signInPassword = document.getElementById('signInPassword').value
            signInWithEmailAndPassword(auth, signInEmail, signInPassword)
                .then((userCredential) => {
                    // Signed in
                    console.log(userCredential)
                    const user = userCredential.user;
                    // ...
                })
                .catch((error) => {
                    console.log('로그인 실패')
                    const errorCode = error.code;
                    const errorMessage = error.message;
                });
        })
        document.getElementById('googleLogin').addEventListener('click', () =>{
            signInWithPopup(auth, provider)
                .then((result) => {
                    // This gives you a Google Access Token. You can use it to access the Google API.
                    const credential = GoogleAuthProvider.credentialFromResult(result);
                    const token = credential.accessToken;
                    // The signed-in user info.
                    const user = result.user;
                    console.log(result)
                    // IdP data available using getAdditionalUserInfo(result)
                    // ...
                }).catch((error) => {
                    // Handle Errors here.
                    const errorCode = error.code;
                    const errorMessage = error.message;
                    // The email of the user's account used.
                    const email = error.customData.email;
                    // The AuthCredential type that was used.
                    const credential = GoogleAuthProvider.credentialFromError(error);
                    console.log(error)
                    // ...
                });
            })
            window.recaptchaVerifier = new RecaptchaVerifier
            ('phoneNumberButton', {
            'size': 'invisible',
            'callback': (response) => {
                // reCAPTCHA solved, allow signInWithPhoneNumber.
                onSignInSubmit();
            }
            }, auth);

            document.getElementById('phoneNumberButton').
            addEventListener('click',(event) => {
                event.preventDefault()

                const phoneNumber = document.getElementById('phoneNumber').value
                const appVerifier = window.recaptchaVerifier;

                signInWithPhoneNumber(auth, '+1'+phoneNumber, appVerifier)
                    .then((confirmationResult) => {
                    // SMS sent. Prompt user to type the code from the message, then sign the
                    // user in with confirmationResult.confirm(code).
                    window.confirmationResult = confirmationResult;
                    console.log(confirmationResult)
                    // ...
                    }).catch((error) => {
                        console.log(error)
                    // Error; SMS not sent
                    // ...
                    });
            })

            document.getElementById('confirmCodeButton').
            addEventListener('click', (event) =>{
                event.preventDefault()
                const code = document.getElementById('confirmCode').value
                confirmationResult.confirm(code).then((result) => {
                // User signed in successfully.
                const user = result.user;
                console.log(result)
                // ...
                }).catch((error) => {
                    console.log(error)
                // User couldn't sign in (bad verification code?)
                // ...
                });
            })

            

           
        

        
        

      </script>
</body>
</html>
